[project]
name = "lexai"
version = "0.1.0"
description = "LexAI is an AI legal assistant that provides accurate, location-specific legal information in a clear and accessible format."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }

authors = [
  { name = "Alex Ulanch", email = "alexulanch@gmail.com" },
]

keywords = ["AI", "Legal", "Gradio", "OpenAI", "RAG"]

classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Application Frameworks"
]

dependencies = [
  "pandas",
  "numpy",
  "openai",
  "gradio",
  "scipy",
  "python-dotenv"
]

[project.urls]
Homepage = "https://github.com/alexulanch/lexai"
"Bug Tracker" = "https://github.com/alexulanch/lexai/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["lexai*"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.venv
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.eggs
  | \.nox
  | build
  | dist
  | data
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["lexai"]
known_local_folder = ["lexai"]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/data/*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = ["data", "build", "dist"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]